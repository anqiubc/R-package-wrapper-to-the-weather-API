devtools::document()
?data_request
?get_astronomy
usethat::use_vignette("introduction")
devtools::use_vignette("vignette")
usethat::use_vignette("introduction")
devtools::use_vignette("introduction")
usethat::use_vignette("introduction")
install.packages("usethat")
usethat::use_vignette("introduction")
usethis::use_vignette("my-vignette")
library("project")
usethis::use_testthat()
a = data.frame()
typeof(a)
#' @export
# Reference: I learnt most of those from https://httr.r-lib.org/articles/api-packages.html
library(httr)
library(lubridate)
library(tidyverse)
#' get the astronomy data of specific date time and city from weatherapi.com
#'
#' @param query A list contain information of city, date, and api_key, represented by q, dt, key, repectively.
#'
#' @return The http get response containing astronomy information.
#' @examples
#' data_request(list(key="abc", q="London", dt="2021-01-01"))
#'
data_request <- function(query) {
url <- modify_url("http://api.weatherapi.com/v1/astronomy.json",
query  = query)
GET(url)
}
#' A wrapper function to obtain the the astronomy data of a the desired city and date time from the weatherapi.com.
#'
#' @param city A string indicating city (e.g., "London", "Beijing").
#' @param date A string of the form yyyy-mm-dd indicating date (e.g., "2022-02-10").
#'
#' @return A dataframe with the columns `sunrise`, `sunset`, `moonrise`, `moonset`, `moon_phase`, and `moon_illumination`.
#' @examples
#' get_astronomy("Beijing", "2022-01-10")
#'
get_astronomy <- function(city, date) {
# Process and validate here the parameter `city`, which affects the function parameter in the API
if (!is.character(city))
stop("city has to be a character string")
# Process and validate here the parameter `date`, which affects the function parameter in the API
if (!is.character(date)) {
stop("date has to be a character string")
}else if (is.na(as.Date(date, format = "%Y-%m-%d"))){
stop("invaild date format detected")
}
# Requesting the data
query <- list()
query$key <- "9d56997213e54667a41172101221602"
query$q <- city
query$dt <- date
res <- data_request(query)
# Check if the response type is json, if not, raise an error.
if (http_type(res) != "application/json") {
stop("API did not return json", call. = FALSE)
}
# parse the response
parsed_res <- jsonlite::fromJSON(content(res, "text", encoding = "UTF-8"),
simplifyVector = FALSE)
# Check if the request was successful, if not, raise an error
if (http_error(res)) {
stop(
sprintf(
"Weather Astronomy API request failed [%s]\n%s\n<%s>",
status_code(res),
parsed_res$message,
parsed_res$documentation_url
),
call. = FALSE
)
}
# Create dataframe to hold the response data
result <- data.frame(parsed_res)
result <- subset(result, select = -c(location.tz_id, location.localtime_epoch, location.localtime))
colnames(result) <- c("city", "region", "country", "lat", "lon", "sunrise", "sunset", "moonrise",
"moonset", "moon_phase", "moon_illumination")
result$date <- date
result
}
data <- get_astronomy("London", "2022-02-21")
data
test_that("the output of get_astronomy has right column names", {
expect_named(get_astronomy("Beijing", "2021-01-01"),
c("city", "region", "country", "lat", "lon", "sunrise", "sunset", "moonrise",
"moonset", "moon_phase", "moon_illumination", "date"))
expect_named(get_astronomy("Shanghai", "2022-01-01"),
c("city", "region", "country", "lat", "lon", "sunrise", "sunset", "moonrise",
"moonset", "moon_phase", "moon_illumination", "date"))
})
testthat::test_that("Variable specific checks", {
for (i in 1:3) testthat::expect_true(1 == 1)
})
data.frame(1)
devtools::test().
devtools::test()
getwd()
devtools::test()
data <- get_astronomy("London", "2022-02-21")
data
str(data)
data <- get_astronomy("Beijing", "2022-02-21")
data
str(data)
year = c()
year
c(year,1)
as.character(1)
as.character(2011)
paste("2011", "-01-01", sep='')
library(ggplot2)
dates <- c()
sunrise_times <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-01-01", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract sunrise time
sunrise_time <- data$sunrise
dates <- c(dates, date)
sunrise_times <- c(sunrise_times, sunrise_time)
}
data.frame(date=dates, sunrise=sunrise_times)
library(ggplot2)
dates <- c()
sunrise_times <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract sunrise time
sunrise_time <- data$sunrise
dates <- c(dates, date)
sunrise_times <- c(sunrise_times, sunrise_time)
}
data.frame(date=dates, sunrise=sunrise_times)
dates <- c()
moon_illuminations <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract moon_illumination
moon_illumination <- data$moon_illumination
dates <- c(dates, date)
moon_illuminations <- c(moon_illuminations, moon_illumination)
}
data.frame(date=dates, moon_illumination=moon_illuminations)
ggplot(data=result, aes(x=date, y=moon_illumination)) +
geom_line()+
labs(title="Moon illumination at Beijing", x="", y="", linetype="")
library(ggplot2)
dates <- c()
moon_illuminations <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract moon_illumination
moon_illumination <- data$moon_illumination
dates <- c(dates, date)
moon_illuminations <- c(moon_illuminations, moon_illumination)
}
result <- data.frame(date=dates, moon_illumination=moon_illuminations)
# Plot moon_illumination
ggplot(data=result, aes(x=date, y=moon_illumination)) +
geom_line()+
labs(title="Moon illumination at Beijing", x="", y="", linetype="")
library(ggplot2)
dates <- c()
moon_illuminations <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract moon_illumination
moon_illumination <- data$moon_illumination
dates <- c(dates, date)
moon_illuminations <- c(moon_illuminations, moon_illumination)
}
result <- data.frame(date=dates, moon_illumination=moon_illuminations)
# Plot moon_illumination
ggplot(data=result, aes(x=date, y=moon_illumination, group=1)) +
geom_line()+
labs(title="Moon illumination at Beijing", x="", y="", linetype="")
library(ggplot2)
years <- c()
moon_illuminations <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract moon_illumination
moon_illumination <- data$moon_illumination
years <- c(years, year)
moon_illuminations <- c(moon_illuminations, moon_illumination)
}
result <- data.frame(year=years, moon_illumination=moon_illuminations)
# Plot moon_illumination
ggplot(data=result, aes(x=date, y=moon_illumination, group=1)) +
geom_line()+
labs(title="Moon illumination at Beijing on July 6th", x="", y="", linetype="")
library(ggplot2)
years <- c()
moon_illuminations <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract moon_illumination
moon_illumination <- data$moon_illumination
years <- c(years, year)
moon_illuminations <- c(moon_illuminations, moon_illumination)
}
result <- data.frame(year=years, moon_illumination=moon_illuminations)
# Plot moon_illumination
ggplot(data=result, aes(x=year, y=moon_illumination, group=1)) +
geom_line()+
labs(title="Moon illumination at Beijing on July 6th", x="", y="", linetype="")
library(project)
library(ggplot2)
years <- c()
moon_illuminations <- c()
for (i in 2011:2021){
year <- as.character(i)
date <- paste(year, "-06-06", sep="")
# get astronomy data on desired date at Beijing
data <- get_astronomy("Beijing", date)
# extract moon_illumination
moon_illumination <- data$moon_illumination
years <- c(years, year)
moon_illuminations <- c(moon_illuminations, moon_illumination)
}
result <- data.frame(year=years, moon_illumination=moon_illuminations)
# Plot moon_illumination
ggplot(data=result, aes(x=year, y=moon_illumination, group=1)) +
geom_line()+
labs(title="Moon illumination at Beijing on July 6th", x="", y="", linetype="")
